#!/usr/bin/env nu
#
# Simple wrapper for the compiled setup binary.
# - Always (optionally) runs an external `build` command if it exists in PATH.
# - Passes ALL arguments straight through to the binary unchanged.
# - Fully transparent: flags like `--alicebot` are treated as plain args (no Nushell flag parsing).
#
# Usage examples:
#   setup create
#   setup create --alicebot
#   setup apply file.tar.xz
#
# This script intentionally keeps no opinion about arguments; all logic lives in the Go binary.

# Absolute path to the repository (adjust if you relocate the repo)
let repo_path = "/home/alice/setup"
let binary = $"($repo_path)/bin/setup"

def main [ ...args ] {
    # Try building (no error if build tool is absent)
    build

    if not ($binary | path exists) {
        error make { msg: $"Binary not found: ($binary)" }
    }

    # Execute binary with ALL raw arguments (including things like --alicebot)
    ^$binary ...$args
    exit $env.LAST_EXIT_CODE
}
